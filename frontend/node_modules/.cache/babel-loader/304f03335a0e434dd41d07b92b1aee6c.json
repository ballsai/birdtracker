{"ast":null,"code":"import _slicedToArray from\"C:\\\\Projects\\\\birdtracker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';var SearchBar=function SearchBar(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var handleChange=function handleChange(event){if(event.target.value!=\"\"){props.requestQuery(event.target.value);}else props.requestQuery(\"\");};var handleSubmit=function handleSubmit(event){event.preventDefault();props.menuStateChange(false);};return/*#__PURE__*/React.createElement(\"div\",{className:\"input-group input-group-sm\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"search\",placeholder:\"Start to filter... e.g.(ID, name)\",onChange:handleChange}));};export default SearchBar;","map":{"version":3,"sources":["C:/Projects/birdtracker/frontend/src/layouts/SearchBar.js"],"names":["React","useState","useEffect","SearchBar","props","query","setQuery","handleChange","event","target","value","requestQuery","handleSubmit","preventDefault","menuStateChange"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,eAEDH,QAAQ,CAAC,EAAD,CAFP,wCAEpBI,KAFoB,eAEbC,QAFa,eAI3B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAU,CAC3B,GAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,EAAsB,EAAzB,CAA4B,CACxBN,KAAK,CAACO,YAAN,CAAmBH,KAAK,CAACC,MAAN,CAAaC,KAAhC,EACH,CAFD,IAEMN,CAAAA,KAAK,CAACO,YAAN,CAAmB,EAAnB,EACT,CAJD,CAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,KAAD,CAAU,CAC3BA,KAAK,CAACK,cAAN,GACAT,KAAK,CAACU,eAAN,CAAsB,KAAtB,EACH,CAHD,CAKA,mBACM,2BAAK,SAAS,CAAC,4BAAf,CAA4C,QAAQ,CAAEF,YAAtD,eACI,6BAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,QAArC,CACI,WAAW,CAAC,mCADhB,CAEI,QAAQ,CAAEL,YAFd,EADJ,CADN,CAQD,CAvBD,CAyBA,cAAeJ,CAAAA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst SearchBar = (props) => {\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const handleChange = (event) =>{\r\n      if(event.target.value != \"\"){\r\n          props.requestQuery(event.target.value);\r\n      }else props.requestQuery(\"\");\r\n  }\r\n  \r\n  const handleSubmit = (event) =>{\r\n      event.preventDefault();\r\n      props.menuStateChange(false);\r\n  }\r\n  \r\n  return(\r\n        <div className=\"input-group input-group-sm\" onSubmit={handleSubmit}>\r\n            <input className=\"form-control\" type=\"search\"\r\n                placeholder=\"Start to filter... e.g.(ID, name)\"\r\n                onChange={handleChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}