{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Projects\\\\birdtracker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Projects\\\\birdtracker\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Marker,InfoWindow,Polyline}from'react-google-maps';import polylineStyles from'../assets/polylineStyles';var maps_icon=require('../assets/marker_icon.png');var FilterContainer=function FilterContainer(props){var _useState=useState(props.birds),_useState2=_slicedToArray(_useState,2),filterBird=_useState2[0],setFilterBird=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filterPaths=_useState4[0],setFilterPaths=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedLocation=_useState6[0],setSelectedLocation=_useState6[1];var fetchFilterData=function fetchFilterData(){var newList=[];if(props.query!=\"\"){newList=props.birds.filter(function(bird){return bird.name.includes(props.query);});setFilterBird(newList);}else{newList=props.birds;setFilterBird(props.birds);}newList.map(function(bird){var paths=[];var color=polylineStyles[bird.id];bird.locations.map(function(location){paths=[].concat(_toConsumableArray(paths),[function(_ref){var lat=_ref.lat,lng=_ref.lng;return{lat:lat,lng:lng};}(location.coordinates)]);});setFilterPaths(function(filterPaths){return[].concat(_toConsumableArray(filterPaths),[{color:color,paths:paths}]);});});};useEffect(function(){setFilterPaths([]);// Initialize again, prevent append from previous list\nfetchFilterData();console.log(filterPaths);},[props.birds,props.query]);//Update when birds or query has changed\nreturn/*#__PURE__*/React.createElement(\"div\",null,filterBird.map(function(bird){return bird.locations.map(function(location,index){return/*#__PURE__*/React.createElement(Marker,{key:index,position:location.coordinates,icon:{url:maps_icon,scaleSize:new window.google.maps.Size(8,8)},onClick:function onClick(){setSelectedLocation(location);}});});}),selectedLocation&&/*#__PURE__*/React.createElement(InfoWindow,{position:selectedLocation.coordinates,onCloseClick:function onCloseClick(){setSelectedLocation(null);}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"ID: \",selectedLocation.bird_id,\",DATE: 03/27/2020 04:04 AM\"),/*#__PURE__*/React.createElement(\"p\",null,\"LOCATION: \",selectedLocation.coordinates.lat,\", \",selectedLocation.coordinates.lat),/*#__PURE__*/React.createElement(\"p\",null,\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque diam magna, bibendum id sollicitudin a, facilisis eget libero. Nullam vestibulum mauris id facilisis pharetra. Quisque dolor purus, finibus sit amet bibendum at, ornare in lectus.\"))),filterPaths.map(function(path,index){return/*#__PURE__*/React.createElement(Polyline,{key:index,path:path.paths,options:{strokeColor:path.color,strokeOpacity:0.75,strokeWeight:2}});}));};export default FilterContainer;","map":{"version":3,"sources":["C:/Projects/birdtracker/frontend/src/components/FilterContainer.js"],"names":["React","useState","useEffect","Marker","InfoWindow","Polyline","polylineStyles","maps_icon","require","FilterContainer","props","birds","filterBird","setFilterBird","filterPaths","setFilterPaths","selectedLocation","setSelectedLocation","fetchFilterData","newList","query","filter","bird","name","includes","map","paths","color","id","locations","location","lat","lng","coordinates","console","log","index","url","scaleSize","window","google","maps","Size","bird_id","path","strokeColor","strokeOpacity","strokeWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Marker, \r\n    InfoWindow,\r\n    Polyline} from 'react-google-maps';\r\nimport polylineStyles from '../assets/polylineStyles'\r\n\r\nconst maps_icon = require('../assets/marker_icon.png');\r\n\r\nconst FilterContainer = (props) =>{\r\n\r\n    const [filterBird, setFilterBird] = useState(props.birds);\r\n    const [filterPaths, setFilterPaths] = useState([]);\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n    const fetchFilterData = () =>{\r\n        let newList = [];\r\n        if(props.query != \"\"){\r\n            newList = props.birds.filter(bird => bird.name.includes(props.query));\r\n            setFilterBird(newList);\r\n        } else {\r\n            newList = props.birds;\r\n            setFilterBird(props.birds);\r\n        }\r\n        newList.map(bird => {\r\n            let paths = [];\r\n            let color = polylineStyles[bird.id];\r\n            bird.locations.map(location => {\r\n                paths = [...paths, \r\n                    (({lat, lng})=>({lat, lng}))(location.coordinates)];\r\n            });\r\n            setFilterPaths(filterPaths=> [...filterPaths, {color, paths}]);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setFilterPaths([]); // Initialize again, prevent append from previous list\r\n        fetchFilterData();\r\n        console.log(filterPaths);\r\n\r\n    },[props.birds, props.query]); //Update when birds or query has changed\r\n\r\n    return(\r\n        <div>\r\n            { filterBird.map(bird => (\r\n                bird.locations.map((location, index) => (\r\n                    <Marker key={index} \r\n                        position = {location.coordinates}\r\n                        icon = {{\r\n                            url: maps_icon,\r\n                            scaleSize: new window.google.maps.Size(8, 8)\r\n                        }}\r\n\r\n                        onClick = {() => {\r\n                            setSelectedLocation(location);\r\n                        }}\r\n                    />\r\n                ))\r\n            ))}\r\n\r\n            { selectedLocation && (\r\n                <InfoWindow\r\n                    position={\r\n                       selectedLocation.coordinates\r\n                    }\r\n                    onCloseClick = {()=>{\r\n                        setSelectedLocation(null);\r\n                    }}\r\n                >\r\n                <div>\r\n                    <p>ID: {selectedLocation.bird_id},DATE: 03/27/2020 04:04 AM</p>\r\n                    <p>LOCATION: {selectedLocation.coordinates.lat}, {selectedLocation.coordinates.lat}</p>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \r\n                        Pellentesque diam magna, bibendum id sollicitudin a, \r\n                        facilisis eget libero. Nullam vestibulum mauris id \r\n                        facilisis pharetra. Quisque dolor purus, finibus sit \r\n                        amet bibendum at, ornare in lectus.\r\n                    </p>\r\n                </div>\r\n                </InfoWindow>\r\n            )}\r\n\r\n            {filterPaths.map((path, index) => (\r\n                <Polyline key = {index}\r\n                    path = {path.paths}\r\n                    options = {{\r\n                        strokeColor: path.color,\r\n                        strokeOpacity: 0.75,\r\n                        strokeWeight: 2\r\n                    }}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FilterContainer;"]},"metadata":{},"sourceType":"module"}